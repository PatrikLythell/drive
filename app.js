// Generated by CoffeeScript 1.3.3
(function() {
  var app, config, db, express, google, jade, portfolio;

  express = require('express');

  jade = require('jade');

  google = require('./reader');

  config = require('./config');

  portfolio = require('./portfolio');

  db = require('mongojs').connect('mongodb://nodejitsu:51f55075e421154ed2175960e3756675@linus.mongohq.com:10072/nodejitsudb4055495529', ['users']);

  google.config(config.google);

  app = express();

  app.configure(function() {
    app.set('view engine', 'jade');
    app.set('views', "" + __dirname + "/views");
    app.set('port', process.env.PORT || 3000);
    app.use(express.bodyParser());
    app.use(express["static"](__dirname + '/public'));
    app.use(express.cookieParser());
    app.use(express.session({
      secret: "shhhhhhhhhhhhhh!"
    }));
    app.use(express.methodOverride());
    return app.use(app.router);
  });

  app.configure('development', function() {
    return app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  });

  app.configure('production', function() {
    return app.use(express.errorHandler());
  });

  app.get('/', function(req, res) {
    google.getRevs(null, '0BwF9Jd0AjOqgQkRRcjV4TGgtQ28', function(resp) {
      return console.log(resp);
    });
    /*
      google.listFiles null, (resp) ->
        portfolio.create resp, (arr) ->
          console.log arr
    
      
        for item in resp.items
          if item.file and item.file.parents and item.file.parents[0]
            console.log item.file if item.file.parents[0].id is '0BwF9Jd0AjOqgcVNtVlNrV3hweVE'
          # if item.file.parents and item.file.parents[0].id
            # item.file.parents # 
      
      google.listFiles null, (resp) ->
        portfolio.create resp, (arr) ->
          console.log arr
    */

    return res.render('index', {
      title: 'Hello World!'
    });
  });

  app.get('/auth', function(req, res) {
    return google.auth(function(resp) {
      return res.redirect(resp);
    });
  });

  app.get('/oauth2callback', function(req, res) {
    return google.getToken(req.query.code, function(resp) {
      req.session.google = resp;
      return res.redirect('/pick-name');
    });
  });

  app.get('/pick-name', function(req, res) {
    return res.render('username');
  });

  app.listen(app.get('port'));

  console.log("Express server listening on port " + (app.get('port')));

}).call(this);
