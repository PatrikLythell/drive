// Generated by CoffeeScript 1.3.3
(function() {
  var apiBase, authorization_code, client_id, client_secret, hardToken, redirect_uri, request, url;

  request = require('request');

  redirect_uri = '';

  client_id = '';

  client_secret = '';

  authorization_code = true;

  url = 'https://accounts.google.com/o/oauth2/token';

  apiBase = 'https://www.googleapis.com/drive/v2/files/';

  hardToken = "ya29.AHES6ZTx_1KjFiSNACU9SZECXHhjJVFpU8M7GToY_7YRzQ";

  module.exports = {
    config: function(config) {
      redirect_uri = config.redirect_uri;
      client_id = config.client_id;
      client_secret = config.client_secret;
    },
    auth: function(callback) {
      var auth_url;
      auth_url = "https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/drive&access_type=offline&response_type=code&redirect_uri=" + redirect_uri + "&client_id=" + client_id;
      return callback(auth_url);
    },
    getToken: function(reqToken, callback) {
      var params;
      params = {
        "code": reqToken,
        "client_id": client_id,
        "client_secret": client_secret,
        "redirect_uri": redirect_uri,
        "grant_type": "authorization_code"
      };
      return request.post({
        url: url,
        form: params
      }, function(err, res, body) {
        if (err) {
          throw err;
        }
        console.log(res.statusCode);
        if (res.statusCode === 200) {
          return callback(JSON.parse(body));
        } else {
          return console.log("you're fucked by first one");
        }
      });
    },
    refresh: function(token, callback) {
      var params;
      params = {
        client_secret: client_secret,
        grant_type: "refresh_token",
        refresh_token: token,
        client_id: client_id
      };
      return request.post({
        url: "https://accounts.google.com/o/oauth2/token",
        form: params
      }, function(err, res, body) {
        body = JSON.parse(body);
        return callback(body.access_token);
      });
    },
    listFiles: function(token, callback) {
      return request.get({
        uri: apiBase,
        headers: {
          authorization: "Bearer " + hardToken
        }
      }, function(err, res, body) {
        var getOurFOlder;
        getOurFOlder = function(items) {
          var item, _i, _len;
          for (_i = 0, _len = items.length; _i < _len; _i++) {
            item = items[_i];
            if (item.mimeType === 'application/vnd.google-apps.folder' && item.title === 'Test') {
              return item;
            }
          }
        };
        body = JSON.parse(body);
        body = getOurFOlder(body.items);
        if (!err) {
          return callback(body);
        } else {
          return console.log(err);
        }
      });
    },
    getChildren: function(token, folder, callback) {
      return request.get({
        uri: apiBase + folder + '/children',
        headers: {
          authorization: "Bearer " + hardToken
        }
      }, function(err, res, body) {
        if (!err) {
          return callback(JSON.parse(body));
        } else {
          return console.log(err);
        }
      });
    },
    getFile: function(token, file, callback) {
      return request.get({
        uri: apiBase + file,
        headers: {
          authorization: "Bearer " + hardToken
        }
      }, function(err, res, body) {
        if (!err) {
          return callback(JSON.parse(body));
        } else {
          return console.log(err);
        }
      });
    }
  };

}).call(this);
